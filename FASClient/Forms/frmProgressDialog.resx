<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picProgress.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>